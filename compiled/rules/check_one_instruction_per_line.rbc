!RBIX
15746646841238566170
22
M
1
n
n
x
E
8
US-ASCII
10
__script__
i
20
100
7
0
45
1
66
50
2
3
57
3
12
66
2
50
4
3
15
2
11
I
4
I
0
I
0
I
0
I
0
n
p
5
x
E
8
US-ASCII
26
CheckOneInstructionPerLine
x
E
8
US-ASCII
5
Rules
x
E
8
US-ASCII
10
open_class
M
1
p
2
x
E
8
US-ASCII
15
for_module_body
t
n
x
E
8
US-ASCII
26
CheckOneInstructionPerLine
i
58
5
67
100
7
0
7
1
66
68
50
2
0
50
3
4
15
100
7
4
7
5
66
68
50
2
0
50
3
4
15
100
7
6
7
7
66
68
50
2
0
50
3
4
15
100
7
8
7
9
66
68
50
2
0
50
3
4
11
I
5
I
0
I
0
I
0
I
0
n
p
10
x
E
8
US-ASCII
10
initialize
M
1
n
n
x
E
8
US-ASCII
10
initialize
i
9
35
0
38
0
15
55
90
1
11
I
2
I
1
I
0
I
0
I
0
I
0
p
2
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
10
initialize
p
7
I
-1
I
2
I
0
I
3
I
5
I
4
I
9
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
1
x
E
8
US-ASCII
4
args
x
E
8
US-ASCII
17
method_visibility
x
E
8
US-ASCII
15
add_defn_method
x
E
8
US-ASCII
5
while
M
1
n
n
x
E
8
US-ASCII
5
while
i
14
39
0
20
0
50
1
0
50
2
0
50
3
1
11
I
3
I
1
I
1
I
0
I
1
n
p
4
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
3
pos
x
E
8
US-ASCII
8
line_num
x
E
8
US-ASCII
2
<<
p
5
I
-1
I
7
I
0
I
8
I
e
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
1
x
E
8
US-ASCII
4
node
x
E
8
US-ASCII
2
if
M
1
n
n
x
E
8
US-ASCII
2
if
i
64
39
0
20
0
50
1
0
50
2
0
50
3
1
15
20
0
50
4
0
13
9
38
15
20
0
50
4
0
50
5
0
45
6
46
7
50
8
1
9
62
39
0
20
0
50
4
0
50
1
0
50
2
0
80
50
9
1
50
3
1
8
63
1
11
I
4
I
1
I
1
I
0
I
1
n
p
10
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
3
pos
x
E
8
US-ASCII
8
line_num
x
E
8
US-ASCII
2
<<
x
E
8
US-ASCII
4
else
x
E
8
US-ASCII
5
class
x
E
8
US-ASCII
1
C
x
E
8
US-ASCII
2
If
x
E
8
US-ASCII
2
!=
x
E
8
US-ASCII
1
-
p
13
I
-1
I
b
I
0
I
c
I
e
I
e
I
28
I
f
I
3e
I
e
I
3f
I
0
I
40
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
1
x
E
8
US-ASCII
4
node
x
E
8
US-ASCII
10
end_of_run
M
1
n
n
x
E
8
US-ASCII
10
end_of_run
i
38
39
0
50
1
0
50
2
0
57
3
51
4
0
15
39
5
50
6
0
57
7
51
8
0
57
9
51
10
0
50
11
0
57
12
51
4
0
11
I
2
I
0
I
0
I
0
I
0
n
p
13
x
E
8
US-ASCII
7
@source
x
E
8
US-ASCII
6
parser
x
E
8
US-ASCII
6
tokens
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
10
end_of_run
i
32
20
0
50
0
0
7
1
50
2
1
9
30
39
3
20
0
50
4
0
50
5
0
50
6
0
50
7
1
8
31
1
11
I
4
I
1
I
1
I
0
I
1
n
p
8
x
E
8
US-ASCII
5
first
x
E
8
US-ASCII
9
SEMICOLON
x
E
8
US-ASCII
2
==
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
4
last
x
E
8
US-ASCII
3
pos
x
E
8
US-ASCII
8
line_num
x
E
8
US-ASCII
2
<<
p
11
I
-1
I
14
I
0
I
15
I
c
I
16
I
1e
I
15
I
1f
I
0
I
20
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
1
x
E
8
US-ASCII
5
token
x
E
8
US-ASCII
4
each
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
4
uniq
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
10
end_of_run
i
12
39
0
20
0
50
1
1
20
0
35
2
11
I
4
I
1
I
1
I
0
I
1
n
p
2
x
E
8
US-ASCII
6
@elems
x
E
8
US-ASCII
5
count
p
3
I
-1
I
1a
I
c
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
1
x
E
8
US-ASCII
1
e
x
E
8
US-ASCII
3
map
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
10
end_of_run
i
7
20
0
80
50
0
1
11
I
5
I
2
I
2
I
0
I
2
n
p
1
x
E
8
US-ASCII
1
>
p
3
I
-1
I
1a
I
7
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
2
x
E
8
US-ASCII
1
c
x
E
8
US-ASCII
2
_1
x
E
8
US-ASCII
6
select
x
E
8
US-ASCII
4
sort
M
1
p
2
x
E
8
US-ASCII
9
for_block
t
n
x
E
8
US-ASCII
10
end_of_run
i
46
45
0
13
72
1
47
9
31
48
50
2
0
13
20
0
48
102
3
7
4
64
2
20
1
48
50
5
2
15
8
45
20
0
48
102
3
7
4
64
2
20
1
50
1
2
11
I
7
I
2
I
2
I
0
I
2
n
p
6
x
E
8
US-ASCII
5
Error
x
E
8
US-ASCII
3
new
x
E
8
US-ASCII
8
allocate
x
E
8
US-ASCII
4
to_s
s
E
5
UTF-8
13
 instructions
x
E
8
US-ASCII
10
initialize
p
5
I
-1
I
1a
I
0
I
1b
I
2e
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
2
x
E
8
US-ASCII
12
instructions
x
E
8
US-ASCII
4
line
p
7
I
-1
I
13
I
0
I
14
I
e
I
1a
I
26
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
0
p
9
I
2
I
2
I
10
I
7
I
1e
I
b
I
2c
I
13
I
3a
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
0
x
E
8
US-ASCII
10
call_under
p
3
I
0
I
1
I
14
x
E
8
US-ASCII
44
src//rules/check_one_instruction_per_line.rb
p
0
